//@version=4
study(title="DIY: BMSB, Risk, Corridor", shorttitle="DIY: BMSB(20MA/21EMA), Risk, Corridor", overlay=true)

// Amateur switch 8 week SMA
switch = input(title="On/Off 8 week SMA", type=input.bool, defval=true)
transp = 100
if (switch)
    transp := 0
    
// Amateur switch 50 week SMA
switch50 = input(title="On/Off 50 week SMA", type=input.bool, defval=false)
transp50 = 100
fill50 = 100
if (switch50)
    transp50 := 0
    fill50 := 80

ma1Enabled = input(title="MA 1", type=input.bool, defval=true, group="Moving Average", inline="MA1")
ma1Type = input("MA", title="", options = ["EMA", "MA"], group="Moving Average", inline="MA1")
ma1Length = input(title="", type=input.integer, defval=8, minval=1, group="Moving Average", inline="MA1")
ma1Resolution = input(title="", type=input.resolution, defval="", group="Moving Average", inline="MA11")
ma1Source = input(title="", type=input.source, defval=close, group="Moving Average", inline="MA11")
ma1Forecast = input(title=" Forecast", type=input.bool, defval=true, group="Moving Average", inline="MA11")

ma2Enabled = input(title="MA 2", type=input.bool, defval=true, group="Moving Average", inline="MA2")
ma2Type = input("MA", title="", options = ["EMA", "MA"], group="Moving Average", inline="MA2")
ma2Length = input(title="", type=input.integer, defval=20, minval=1, group="Moving Average", inline="MA2")
ma2Resolution = input(title="", type=input.resolution, defval="", group="Moving Average", inline="MA22")
ma2Source = input(title="", type=input.source, defval=close, group="Moving Average", inline="MA22")
ma2Forecast = input(title=" Forecast", type=input.bool, defval=true, group="Moving Average", inline="MA22")

ma3Enabled = input(title="MA 3", type=input.bool, defval=true, group="Moving Average", inline="MA3")
ma3Type = input("EMA", title="", options = ["EMA", "MA"], group="Moving Average", inline="MA3")
ma3Length = input(title="", type=input.integer, defval=21, minval=1, group="Moving Average", inline="MA3")
ma3Resolution = input(title="", type=input.resolution, defval="", group="Moving Average", inline="MA33")
ma3Source = input(title="", type=input.source, defval=close, group="Moving Average", inline="MA33")
ma3Forecast = input(title=" Forecast", type=input.bool, defval=true, group="Moving Average", inline="MA33")

ma4Enabled = input(title="MA 4", type=input.bool, defval=true, group="Moving Average", inline="MA4")
ma4Type = input("MA", title="", options = ["EMA", "MA"], group="Moving Average", inline="MA4")
ma4Length = input(title="", type=input.integer, defval=50, minval=1, group="Moving Average", inline="MA4")
ma4Resolution = input(title="", type=input.resolution, defval="", group="Moving Average", inline="MA44")
ma4Source = input(title="", type=input.source, defval=close, group="Moving Average", inline="MA44")
ma4Forecast = input(title=" Forecast", type=input.bool, defval=true, group="Moving Average", inline="MA44")

ma5Enabled = input(title="MA 5", type=input.bool, defval=true, group="Moving Average", inline="MA5")
ma5Type = input("EMA", title="", options = ["EMA", "MA"], group="Moving Average", inline="MA5")
ma5Length = input(title="", type=input.integer, defval=52, minval=1, group="Moving Average", inline="MA5")
ma5Resolution = input(title="", type=input.resolution, defval="", group="Moving Average", inline="MA55")
ma5Source = input(title="", type=input.source, defval=close, group="Moving Average", inline="MA55")
ma5Forecast = input(title=" Forecast", type=input.bool, defval=true, group="Moving Average", inline="MA55")

ma(_type, _src, _len) =>
    if _type == "EMA"
        ema(_src, _len)
    else if _type == "MA"
        sma(_src, _len)

ma_prediction(_type, _src, _period, _offset) =>
    (ma(_type, _src, _period - _offset) * (_period - _offset) + _src * _offset) / _period

ma1 = security(syminfo.tickerid, "W", ma(ma1Type, ma1Source, ma1Length), barmerge.gaps_on, barmerge.lookahead_on)
ma2 = security(syminfo.tickerid, "W", ma(ma2Type, ma2Source, ma2Length), barmerge.gaps_on, barmerge.lookahead_on)
ma3 = security(syminfo.tickerid, "W", ma(ma3Type, ma3Source, ma3Length), barmerge.gaps_on, barmerge.lookahead_on)
ma4 = security(syminfo.tickerid, "W", ma(ma4Type, ma4Source, ma4Length), barmerge.gaps_on, barmerge.lookahead_on)
ma5 = security(syminfo.tickerid, "W", ma(ma5Type, ma5Source, ma5Length), barmerge.gaps_on, barmerge.lookahead_on)

pma1_1 = security(syminfo.tickerid, "W", ma_prediction(ma1Type, ma1Source, ma1Length, 1))
pma1_2 = security(syminfo.tickerid, "W", ma_prediction(ma1Type, ma1Source, ma1Length, 2))
pma1_3 = security(syminfo.tickerid, "W", ma_prediction(ma1Type, ma1Source, ma1Length, 3))
pma1_4 = security(syminfo.tickerid, "W", ma_prediction(ma1Type, ma1Source, ma1Length, 4))
pma1_5 = security(syminfo.tickerid, "W", ma_prediction(ma1Type, ma1Source, ma1Length, 5))

pma2_1 = security(syminfo.tickerid, "W", ma_prediction(ma2Type, ma2Source, ma2Length, 1))
pma2_2 = security(syminfo.tickerid, "W", ma_prediction(ma2Type, ma2Source, ma2Length, 2))
pma2_3 = security(syminfo.tickerid, "W", ma_prediction(ma2Type, ma2Source, ma2Length, 3))
pma2_4 = security(syminfo.tickerid, "W", ma_prediction(ma2Type, ma2Source, ma2Length, 4))
pma2_5 = security(syminfo.tickerid, "W", ma_prediction(ma2Type, ma2Source, ma2Length, 5))

pma3_1 = security(syminfo.tickerid, "W", ma_prediction(ma3Type, ma3Source, ma3Length, 1))
pma3_2 = security(syminfo.tickerid, "W", ma_prediction(ma3Type, ma3Source, ma3Length, 2))
pma3_3 = security(syminfo.tickerid, "W", ma_prediction(ma3Type, ma3Source, ma3Length, 3))
pma3_4 = security(syminfo.tickerid, "W", ma_prediction(ma3Type, ma3Source, ma3Length, 4))
pma3_5 = security(syminfo.tickerid, "W", ma_prediction(ma3Type, ma3Source, ma3Length, 5))

pma4_1 = security(syminfo.tickerid, "W", ma_prediction(ma4Type, ma4Source, ma4Length, 1))
pma4_2 = security(syminfo.tickerid, "W", ma_prediction(ma4Type, ma4Source, ma4Length, 2))
pma4_3 = security(syminfo.tickerid, "W", ma_prediction(ma4Type, ma4Source, ma4Length, 3))
pma4_4 = security(syminfo.tickerid, "W", ma_prediction(ma4Type, ma4Source, ma4Length, 4))
pma4_5 = security(syminfo.tickerid, "W", ma_prediction(ma4Type, ma4Source, ma4Length, 5))

pma5_1 = security(syminfo.tickerid, "W", ma_prediction(ma5Type, ma5Source, ma5Length, 1))
pma5_2 = security(syminfo.tickerid, "W", ma_prediction(ma5Type, ma5Source, ma5Length, 2))
pma5_3 = security(syminfo.tickerid, "W", ma_prediction(ma5Type, ma5Source, ma5Length, 3))
pma5_4 = security(syminfo.tickerid, "W", ma_prediction(ma5Type, ma5Source, ma5Length, 4))
pma5_5 = security(syminfo.tickerid, "W", ma_prediction(ma5Type, ma5Source, ma5Length, 5))

plot(ma1Enabled ? ma1 : na, title="MA 1", color=color.new(color.orange, transp), linewidth=2)
p4 = plot(ma4Enabled ? ma4 : na, title="MA 4", color=color.new(color.blue, transp50), linewidth=2)
p5 = plot(ma4Enabled ? ma5 : na, title="MA 5", color=color.new(color.yellow, transp50), linewidth=2)
p1 = plot(ma2Enabled ? ma2 : na, title="MA 2", color=color.new(color.red, 0), linewidth=2)
p2 = plot(ma3Enabled ? ma3 : na, title="MA 3", color=color.new(color.green, 0), linewidth=2)
fill(p1, p2, color=color.rgb(255,255,0, 80))
fill(p4, p5, color=color.rgb(255,255,0, fill50))

var label maLabel8 = na
maLabel8 := label.new(x=bar_index, y=int(ma1), yloc=yloc.price, style=label.style_label_left, color=color.new(color.orange, 100), text=tostring(ma1, "$ # - 8d sma"), textcolor=color.new(color.orange, transp))
label.delete(maLabel8[1])

var label maLabel20 = na
maLabel20 := label.new(x=bar_index, y=int(ma2), yloc=yloc.price, style=label.style_label_left, color=color.new(color.red, 100), text=tostring(ma2, "$ # - 2Od sma"), textcolor=color.new(color.red, 0))
label.delete(maLabel20[1])

var label maLabel21 = na
maLabel21 := label.new(x=bar_index, y=int(ma3), yloc=yloc.price, style=label.style_label_left, color=color.new(color.green, 100), text=tostring(ma3, "$ # - 21d ema"), textcolor=color.new(color.green, 0))
label.delete(maLabel21[1])

var label maLabel50 = na
maLabel50 := label.new(x=bar_index, y=int(ma4), yloc=yloc.price, style=label.style_label_left, color=color.new(color.blue, 100), text=tostring(ma4, "$ # - 5Od sma"), textcolor=color.new(color.blue, transp50))
label.delete(maLabel50[1])

var label maLabel52 = na
maLabel52 := label.new(x=bar_index, y=int(ma5), yloc=yloc.price, style=label.style_label_left, color=color.new(color.yellow, 100), text=tostring(ma5, "$ # - 52d ema"), textcolor=color.new(color.yellow, transp50))
label.delete(maLabel52[1])

// plot(ma1Enabled and ma1Forecast ? pma1_1 : na, title="MA 1 Forecast 1", color=color.new(color.orange, transp), linewidth=2, style=plot.style_circles, offset=1, show_last=1)
// plot(ma1Enabled and ma1Forecast ? pma1_2 : na, title="MA 1 Forecast 2", color=color.new(color.orange, transp), linewidth=2, style=plot.style_circles, offset=2, show_last=1)
// plot(ma1Enabled and ma1Forecast ? pma1_3 : na, title="MA 1 Forecast 3", color=color.new(color.orange, transp), linewidth=2, style=plot.style_circles, offset=3, show_last=1)
// plot(ma1Enabled and ma1Forecast ? pma1_4 : na, title="MA 1 Forecast 4", color=color.new(color.orange, transp), linewidth=2, style=plot.style_circles, offset=4, show_last=1)
// plot(ma1Enabled and ma1Forecast ? pma1_5 : na, title="MA 1 Forecast 5", color=color.new(color.orange, transp), linewidth=2, style=plot.style_circles, offset=5, show_last=1)

// plot(ma2Enabled and ma2Forecast ? pma2_1 : na, title="MA 2 Forecast 1", color=color.new(color.red, 0), linewidth=2, style=plot.style_circles, offset=1, show_last=1)
// plot(ma2Enabled and ma2Forecast ? pma2_2 : na, title="MA 2 Forecast 2", color=color.new(color.red, 0), linewidth=2, style=plot.style_circles, offset=2, show_last=1)
// plot(ma2Enabled and ma2Forecast ? pma2_3 : na, title="MA 2 Forecast 3", color=color.new(color.red, 0), linewidth=2, style=plot.style_circles, offset=3, show_last=1)
// plot(ma2Enabled and ma2Forecast ? pma2_4 : na, title="MA 2 Forecast 4", color=color.new(color.red, 0), linewidth=2, style=plot.style_circles, offset=4, show_last=1)
// plot(ma2Enabled and ma2Forecast ? pma2_5 : na, title="MA 2 Forecast 5", color=color.new(color.red, 0), linewidth=2, style=plot.style_circles, offset=5, show_last=1)

// plot(ma3Enabled and ma3Forecast ? pma3_1 : na, title="MA 3 Forecast 1", color=color.new(color.green, 0), linewidth=2, style=plot.style_circles, offset=1, show_last=1)
// plot(ma3Enabled and ma3Forecast ? pma3_2 : na, title="MA 3 Forecast 2", color=color.new(color.green, 0), linewidth=2, style=plot.style_circles, offset=2, show_last=1)
// plot(ma3Enabled and ma3Forecast ? pma3_3 : na, title="MA 3 Forecast 3", color=color.new(color.green, 0), linewidth=2, style=plot.style_circles, offset=3, show_last=1)
// plot(ma3Enabled and ma3Forecast ? pma3_4 : na, title="MA 3 Forecast 4", color=color.new(color.green, 0), linewidth=2, style=plot.style_circles, offset=4, show_last=1)
// plot(ma3Enabled and ma3Forecast ? pma3_5 : na, title="MA 3 Forecast 5", color=color.new(color.green, 0), linewidth=2, style=plot.style_circles, offset=5, show_last=1)

// plot(ma4Enabled and ma4Forecast ? pma4_1 : na, title="MA 4 Forecast 1", color=color.new(color.blue, transp), linewidth=2, style=plot.style_circles, offset=1, show_last=1)
// plot(ma4Enabled and ma4Forecast ? pma4_2 : na, title="MA 4 Forecast 2", color=color.new(color.blue, transp), linewidth=2, style=plot.style_circles, offset=2, show_last=1)
// plot(ma4Enabled and ma4Forecast ? pma4_3 : na, title="MA 4 Forecast 3", color=color.new(color.blue, transp), linewidth=2, style=plot.style_circles, offset=3, show_last=1)
// plot(ma4Enabled and ma4Forecast ? pma4_4 : na, title="MA 4 Forecast 4", color=color.new(color.blue, transp), linewidth=2, style=plot.style_circles, offset=4, show_last=1)
// plot(ma4Enabled and ma4Forecast ? pma4_5 : na, title="MA 4 Forecast 5", color=color.new(color.blue, transp), linewidth=2, style=plot.style_circles, offset=5, show_last=1)

// plot(ma5Enabled and ma5Forecast ? pma5_1 : na, title="MA 5 Forecast 1", color=color.new(color.yellow, transp), linewidth=2, style=plot.style_circles, offset=1, show_last=1)
// plot(ma5Enabled and ma5Forecast ? pma5_2 : na, title="MA 5 Forecast 2", color=color.new(color.yellow, transp), linewidth=2, style=plot.style_circles, offset=2, show_last=1)
// plot(ma5Enabled and ma5Forecast ? pma5_3 : na, title="MA 5 Forecast 3", color=color.new(color.yellow, transp), linewidth=2, style=plot.style_circles, offset=3, show_last=1)
// plot(ma5Enabled and ma5Forecast ? pma5_4 : na, title="MA 5 Forecast 4", color=color.new(color.yellow, transp), linewidth=2, style=plot.style_circles, offset=4, show_last=1)
// plot(ma5Enabled and ma5Forecast ? pma5_5 : na, title="MA 5 Forecast 5", color=color.new(color.yellow, transp), linewidth=2, style=plot.style_circles, offset=5, show_last=1)

// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=4
//study("DIY: The Cowen Corridor", overlay=true, resolution="W")

// Amateur switch show Ben's Risk
switchCowenCorridor = input(title="On/Off Cowen Corridor", type=input.bool, defval=true)
showCowenCorridor = 100
fillCowenCorridor = 100
if (switchCowenCorridor)
    showCowenCorridor := 0
    fillCowenCorridor := 90

// Days X-Axis Value

start = time == timestamp(2010,7,18,0,0) // First BLX Bitcoin Date
days = security("BNC:BLX", "D", barssince(start))
c=sma(close, 20)

pi=3.1415926535
y1 = c*(16*pi*pi)/sqrt(days)
y2 = c/100*sqrt(days)

plot1 = plot(y1, color=color.new(color.red, showCowenCorridor))
plot2 = plot(y2, color=color.new(color.lime, showCowenCorridor))
fill(plot1,plot2,color=color.new(color.blue, fillCowenCorridor))



// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=4
//study("DIY: Ben's Risk", overlay=true)

// Amateur switch show Ben's Risk
switchShowRisk = input(title="On/Off Ben's Risk", type=input.bool, defval=true)
showRisk = 100
if (switchShowRisk)
    showRisk := 0

input = input(title="Ticker", defval="BTC", options=["BTC", "ETH", "ADA", "DOT", "LINK", "TMC"])
price01 = if (input == "BTC")
    19406.6875244427
else
    if (input == "ETH")
        603.37999096949
    else
        if (input == "ADA")
            0.296716941424062
        else
            if (input == "DOT")
                18.6061452513967
            else
                if (input == "LINK")
                    12.033983922008
                else
                    if (input == "TMC")
                        708607263455.31

price02 = if (input == "BTC")
    25283.0376261854
else
    if (input == "ETH")
        1097.43666281109
    else
        if (input == "ADA")
            0.733036426482319
        else
            if (input == "DOT")
                21.1730410245279
            else
                if (input == "LINK")
                    14.6928142552779
                else
                    if (input == "TMC")
                        952776341305.753

price03 = if (input == "BTC")
    34679.1360498775
else
    if (input == "ETH")
        2139.88127361036
    else
        if (input == "ADA")
            1.65787143404174
        else
            if (input == "DOT")
                26.9322878499194
            else
                if (input == "LINK")
                    20.3298421485748
                else
                    if (input == "TMC")
                        952776341305.753

price04 = if (input == "BTC")
    47472.3342939481
else
    if (input == "ETH")
        3871.96003401361
    else
        if (input == "ADA")
            3.19277777777778
        else
            if (input == "DOT")
                36.4808342071537
            else
                if (input == "LINK")
                    29.6791425654985
                else
                    if (input == "TMC")
                        1345152073732.72

price05 = if (input == "BTC")
    63582.0921985816
else
    if (input == "ETH")
        6405.12897420516
    else
        if (input == "ADA")
            5.4455084478959
        else
            if (input == "DOT")
                50.4137931034483
            else
                if (input == "LINK")
                    43.3328521013795
                else
                    if (input == "TMC")
                        1881768839350.62

price06 = if (input == "BTC")
    82942.516722408
else
    if (input == "ETH")
        9846.89410372707
    else
        if (input == "ADA")
            8.51661706349206
        else
            if (input == "DOT")
                69.2906776003453
            else
                if (input == "LINK")
                    61.8369062631358
                else
                    if (input == "TMC")
                        2549911268855.37

price07 = if (input == "BTC")
    105507.606858247
else
    if (input == "ETH")
        14301.3951170902
    else
        if (input == "ADA")
            12.5105258402602
        else
            if (input == "DOT")
                93.6366358192706
            else
                if (input == "LINK")
                    85.7129135538954
                else
                    if (input == "TMC")
                        3362267932489.45

price08 = if (input == "BTC")
    131233.943700465
else
    if (input == "ETH")
        19871.6531564726
    else
        if (input == "ADA")
            17.5379290939786
        else
            if (input == "DOT")
                123.961589846359
            else
                if (input == "LINK")
                    115.46942800789
                else
                    if (input == "TMC")
                        4308496546119.46

price09 = if (input == "BTC")
    160087.088915956
else
    if (input == "ETH")
        26670.2254740929
    else
        if (input == "ADA")
            23.7208526287115
        else
            if (input == "DOT")
                160.778135048232
            else
                if (input == "LINK")
                    151.61887835703
                else
                    if (input == "TMC")
                        5391928209848.14

price10 = if (input == "BTC")
    183760.627861347
else
    if (input == "ETH")
        32645.4963391793
    else
        if (input == "ADA")
            29.197730829421
        else
            if (input == "DOT")
                192.961731207289
            else
                if (input == "LINK")
                    183.242029636282
                else
                    if (input == "TMC")
                        6610205867215.65

var labelText01 = "0.1"  + tostring(price01, " - $ #.##")
plot(price01, title='Line', color=color.new(color.green, showRisk), linewidth=1)
var label01 = label.new(bar_index, price01, text=labelText01)
label.set_x(label01, 0)
label.set_color(label01, color.new(color.green, showRisk))
label.set_xloc(label01, time, xloc.bar_time)
label.set_style(label01, label.style_label_left)

var labelText02 = "0.2"  + tostring(price02, " - $ #.##")
plot(price02, title='Line', color=color.new(color.green, showRisk), linewidth=1)
var label02 = label.new(bar_index, price02, text=labelText02)
label.set_x(label02, 0)
label.set_color(label02, color.new(color.green, showRisk))
label.set_xloc(label02, time, xloc.bar_time)
label.set_style(label02, label.style_label_left)

var labelText03 = "0.3"  + tostring(price03, " - $ #.##")
plot(price03, title='Line', color=color.new(color.green, showRisk), linewidth=1)
var label03 = label.new(bar_index, price03, text=labelText03)
label.set_x(label03, 0)
label.set_color(label03, color.new(color.green, showRisk))
label.set_xloc(label03, time, xloc.bar_time)
label.set_style(label03, label.style_label_left)

var labelText04 = "0.4"  + tostring(price04, " - $ #.##")
plot(price04, title='Line', color=color.new(color.green, showRisk), linewidth=1)
var label04 = label.new(bar_index, price04, text=labelText04)
label.set_x(label04, 0)
label.set_color(label04, color.new(color.green, showRisk))
label.set_xloc(label04, time, xloc.bar_time)
label.set_style(label04, label.style_label_left)

var labelText05 = "0.5"  + tostring(price05, " - $ #.##")
plot(price05, title='Line', color=color.new(color.green, showRisk), linewidth=1)
var label05 = label.new(bar_index, price05, text=labelText05)
label.set_x(label05, 0)
label.set_color(label05, color.new(color.green, showRisk))
label.set_xloc(label05, time, xloc.bar_time)
label.set_style(label05, label.style_label_left)

var labelText06 = "0.6"  + tostring(price06, " - $ #.##")
plot(price06, title='Line', color=color.new(color.orange, showRisk), linewidth=1)
var label06 = label.new(bar_index, price06, text=labelText06)
label.set_x(label06, 0)
label.set_color(label06, color.new(color.orange, showRisk))
label.set_xloc(label06, time, xloc.bar_time)
label.set_style(label06, label.style_label_left)

var labelText07 = "0.7"  + tostring(price07, " - $ #.##")
plot(price07, title='Line', color=color.new(color.orange, showRisk), linewidth=1)
var label07 = label.new(bar_index, price07, text=labelText07)
label.set_x(label07, 0)
label.set_color(label07, color.new(color.orange, showRisk))
label.set_xloc(label07, time, xloc.bar_time)
label.set_style(label07, label.style_label_left)

var labelText08 = "0.8"  + tostring(price08, " - $ #.##")
plot(price08, title='Line', color=color.new(color.red, showRisk), linewidth=1)
var label08 = label.new(bar_index, price08, text=labelText08)
label.set_x(label08, 0)
label.set_color(label08, color.new(color.red, showRisk))
label.set_xloc(label08, time, xloc.bar_time)
label.set_style(label08, label.style_label_left)

var labelText09 = "0.9"  + tostring(price09, " - $ #.##")
plot(price09, title='Line', color=color.new(color.red, showRisk), linewidth=1)
var label09 = label.new(bar_index, price09, text=labelText09)
label.set_x(label09, 0)
label.set_color(label09, color.new(color.red, showRisk))
label.set_xloc(label09, time, xloc.bar_time)
label.set_style(label09, label.style_label_left)

var labelText10 = "1.0" + tostring(price10, " - $ #.##")
plot(price10, title='Line', color=color.new(color.red, showRisk), linewidth=1)
var label10 = label.new(bar_index, price10, text=labelText10)
label.set_x(label10, 0)
label.set_color(label10, color.new(color.red, showRisk))
label.set_xloc(label10, time, xloc.bar_time)
label.set_style(label10, label.style_label_left)
